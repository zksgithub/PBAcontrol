--将组件通过接口组合起来

package PBAcomplete

public with PBAComponents,PBAHardware;

system Complete
end Complete;

system implementation Complete.PBA_speed_control
	subcomponents
		speed_sensor : device PBAComponents::sensor.speed;
		throttle:device PBAComponents::actuator.speed;
		speed_control : process PBAComponents::control.speed;
		interface_unit : device PBAComponents::interface.pilot;
		RT_1GHZ : processor PBAHardware::Real_Time.one_GHz;
		Standard_Marine_Bus :bus PBAHardware::Marine.Standard;
		Stand_Memory : memory PBAHardware::RAM.Standard;
		display_unit: device PBAComponents::display_unit;
	connections
		DC1 : port speed_sensor.sensor_data ->speed_control.sensor_data;
		DC2 : port speed_control.command_data -> throttle.cmd;
		DC3 : port interface_unit.set_speed -> speed_control.set_speed;
		DC4 : port speed_control.status -> display_unit.status;
		EC4 : port interface_unit.disengage -> speed_control.disengage;
		EC5:  port interface_unit.control_on -> speed_control.control_on;
		BAC1 : bus access Standard_Marine_Bus <-> speed_sensor.BA1;
		BAC2 : bus access Standard_Marine_Bus <-> RT_1GHZ.BA1;
		BAC3 : bus access Standard_Marine_Bus <-> throttle.BA1;
		BAC4 : bus access Standard_Marine_Bus <-> interface_unit.BA1;
		BAC5 : bus access Standard_Marine_Bus <-> Stand_Memory.BA1;
	flows
	 	on_end_to_end: end to end flow
	 		interface_unit.on_flow_src ->  DC3->
	 		speed_control.on_flow_path -> DC2 ->
	 		throttle.on_flow_snk{latency => 35ms..35ms;};
	properties
		Allowed_Processor_Binding => (reference(RT_1GHz))  applies to speed_control.speed_control_laws;	
		Allowed_Processor_Binding => (reference(RT_1GHz))  applies to speed_control.scale_speed_data;
		Actual_Memory_Binding => (reference(Stand_Memory))  applies to speed_control;		
end Complete.PBA_speed_control;

end PBAcomplete;
